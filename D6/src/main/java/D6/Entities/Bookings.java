/*
 * This file is generated by jOOQ.
 */
package D6.Entities;


import D6.Entities.tables.Aircrafts;
import D6.Entities.tables.AircraftsData;
import D6.Entities.tables.Airports;
import D6.Entities.tables.AirportsData;
import D6.Entities.tables.BoardingPasses;
import D6.Entities.tables.Flights;
import D6.Entities.tables.FlightsV;
import D6.Entities.tables.Routes;
import D6.Entities.tables.Seats;
import D6.Entities.tables.TicketFlights;
import D6.Entities.tables.Tickets;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bookings extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>bookings</code>
     */
    public static final Bookings BOOKINGS = new Bookings();

    /**
     * Aircrafts
     */
    public final Aircrafts AIRCRAFTS = Aircrafts.AIRCRAFTS;

    /**
     * Aircrafts (internal data)
     */
    public final AircraftsData AIRCRAFTS_DATA = AircraftsData.AIRCRAFTS_DATA;

    /**
     * Airports
     */
    public final Airports AIRPORTS = Airports.AIRPORTS;

    /**
     * Airports (internal data)
     */
    public final AirportsData AIRPORTS_DATA = AirportsData.AIRPORTS_DATA;

    /**
     * Boarding passes
     */
    public final BoardingPasses BOARDING_PASSES = BoardingPasses.BOARDING_PASSES;

    /**
     * Bookings
     */
    public final D6.Entities.tables.Bookings BOOKINGS_ = D6.Entities.tables.Bookings.BOOKINGS_;

    /**
     * Flights
     */
    public final Flights FLIGHTS = Flights.FLIGHTS;

    /**
     * Flights (extended)
     */
    public final FlightsV FLIGHTS_V = FlightsV.FLIGHTS_V;

    /**
     * Routes
     */
    public final Routes ROUTES = Routes.ROUTES;

    /**
     * Seats
     */
    public final Seats SEATS = Seats.SEATS;

    /**
     * Flight segment
     */
    public final TicketFlights TICKET_FLIGHTS = TicketFlights.TICKET_FLIGHTS;

    /**
     * Tickets
     */
    public final Tickets TICKETS = Tickets.TICKETS;

    /**
     * No further instances allowed
     */
    private Bookings() {
        super("bookings", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Aircrafts.AIRCRAFTS,
            AircraftsData.AIRCRAFTS_DATA,
            Airports.AIRPORTS,
            AirportsData.AIRPORTS_DATA,
            BoardingPasses.BOARDING_PASSES,
            D6.Entities.tables.Bookings.BOOKINGS_,
            Flights.FLIGHTS,
            FlightsV.FLIGHTS_V,
            Routes.ROUTES,
            Seats.SEATS,
            TicketFlights.TICKET_FLIGHTS,
            Tickets.TICKETS
        );
    }
}

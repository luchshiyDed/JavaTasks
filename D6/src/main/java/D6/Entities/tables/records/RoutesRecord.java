/*
 * This file is generated by jOOQ.
 */
package D6.Entities.tables.records;


import D6.Entities.tables.Routes;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.YearToSecond;


/**
 * Routes
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoutesRecord extends TableRecordImpl<RoutesRecord> implements Record10<String, String, String, String, String, String, String, String, YearToSecond, Integer[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookings.routes.flight_no</code>. Flight number
     */
    public void setFlightNo(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookings.routes.flight_no</code>. Flight number
     */
    public String getFlightNo() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bookings.routes.departure_airport</code>. Code of
     * airport of departure
     */
    public void setDepartureAirport(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookings.routes.departure_airport</code>. Code of
     * airport of departure
     */
    public String getDepartureAirport() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bookings.routes.departure_airport_name</code>. Name of
     * airport of departure
     */
    public void setDepartureAirportName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookings.routes.departure_airport_name</code>. Name of
     * airport of departure
     */
    public String getDepartureAirportName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bookings.routes.departure_city</code>. City of departure
     */
    public void setDepartureCity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bookings.routes.departure_city</code>. City of departure
     */
    public String getDepartureCity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bookings.routes.arrival_airport</code>. Code of airport
     * of arrival
     */
    public void setArrivalAirport(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bookings.routes.arrival_airport</code>. Code of airport
     * of arrival
     */
    public String getArrivalAirport() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bookings.routes.arrival_airport_name</code>. Name of
     * airport of arrival
     */
    public void setArrivalAirportName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>bookings.routes.arrival_airport_name</code>. Name of
     * airport of arrival
     */
    public String getArrivalAirportName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>bookings.routes.arrival_city</code>. City of arrival
     */
    public void setArrivalCity(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>bookings.routes.arrival_city</code>. City of arrival
     */
    public String getArrivalCity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>bookings.routes.aircraft_code</code>. Aircraft code,
     * IATA
     */
    public void setAircraftCode(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>bookings.routes.aircraft_code</code>. Aircraft code,
     * IATA
     */
    public String getAircraftCode() {
        return (String) get(7);
    }

    /**
     * Setter for <code>bookings.routes.duration</code>. Scheduled duration of
     * flight
     */
    public void setDuration(YearToSecond value) {
        set(8, value);
    }

    /**
     * Getter for <code>bookings.routes.duration</code>. Scheduled duration of
     * flight
     */
    public YearToSecond getDuration() {
        return (YearToSecond) get(8);
    }

    /**
     * Setter for <code>bookings.routes.days_of_week</code>. Days of week on
     * which flights are scheduled
     */
    public void setDaysOfWeek(Integer[] value) {
        set(9, value);
    }

    /**
     * Getter for <code>bookings.routes.days_of_week</code>. Days of week on
     * which flights are scheduled
     */
    public Integer[] getDaysOfWeek() {
        return (Integer[]) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, String, String, String, String, YearToSecond, Integer[]> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, String, String, String, String, String, String, YearToSecond, Integer[]> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Routes.ROUTES.FLIGHT_NO;
    }

    @Override
    public Field<String> field2() {
        return Routes.ROUTES.DEPARTURE_AIRPORT;
    }

    @Override
    public Field<String> field3() {
        return Routes.ROUTES.DEPARTURE_AIRPORT_NAME;
    }

    @Override
    public Field<String> field4() {
        return Routes.ROUTES.DEPARTURE_CITY;
    }

    @Override
    public Field<String> field5() {
        return Routes.ROUTES.ARRIVAL_AIRPORT;
    }

    @Override
    public Field<String> field6() {
        return Routes.ROUTES.ARRIVAL_AIRPORT_NAME;
    }

    @Override
    public Field<String> field7() {
        return Routes.ROUTES.ARRIVAL_CITY;
    }

    @Override
    public Field<String> field8() {
        return Routes.ROUTES.AIRCRAFT_CODE;
    }

    @Override
    public Field<YearToSecond> field9() {
        return Routes.ROUTES.DURATION;
    }

    @Override
    public Field<Integer[]> field10() {
        return Routes.ROUTES.DAYS_OF_WEEK;
    }

    @Override
    public String component1() {
        return getFlightNo();
    }

    @Override
    public String component2() {
        return getDepartureAirport();
    }

    @Override
    public String component3() {
        return getDepartureAirportName();
    }

    @Override
    public String component4() {
        return getDepartureCity();
    }

    @Override
    public String component5() {
        return getArrivalAirport();
    }

    @Override
    public String component6() {
        return getArrivalAirportName();
    }

    @Override
    public String component7() {
        return getArrivalCity();
    }

    @Override
    public String component8() {
        return getAircraftCode();
    }

    @Override
    public YearToSecond component9() {
        return getDuration();
    }

    @Override
    public Integer[] component10() {
        return getDaysOfWeek();
    }

    @Override
    public String value1() {
        return getFlightNo();
    }

    @Override
    public String value2() {
        return getDepartureAirport();
    }

    @Override
    public String value3() {
        return getDepartureAirportName();
    }

    @Override
    public String value4() {
        return getDepartureCity();
    }

    @Override
    public String value5() {
        return getArrivalAirport();
    }

    @Override
    public String value6() {
        return getArrivalAirportName();
    }

    @Override
    public String value7() {
        return getArrivalCity();
    }

    @Override
    public String value8() {
        return getAircraftCode();
    }

    @Override
    public YearToSecond value9() {
        return getDuration();
    }

    @Override
    public Integer[] value10() {
        return getDaysOfWeek();
    }

    @Override
    public RoutesRecord value1(String value) {
        setFlightNo(value);
        return this;
    }

    @Override
    public RoutesRecord value2(String value) {
        setDepartureAirport(value);
        return this;
    }

    @Override
    public RoutesRecord value3(String value) {
        setDepartureAirportName(value);
        return this;
    }

    @Override
    public RoutesRecord value4(String value) {
        setDepartureCity(value);
        return this;
    }

    @Override
    public RoutesRecord value5(String value) {
        setArrivalAirport(value);
        return this;
    }

    @Override
    public RoutesRecord value6(String value) {
        setArrivalAirportName(value);
        return this;
    }

    @Override
    public RoutesRecord value7(String value) {
        setArrivalCity(value);
        return this;
    }

    @Override
    public RoutesRecord value8(String value) {
        setAircraftCode(value);
        return this;
    }

    @Override
    public RoutesRecord value9(YearToSecond value) {
        setDuration(value);
        return this;
    }

    @Override
    public RoutesRecord value10(Integer[] value) {
        setDaysOfWeek(value);
        return this;
    }

    @Override
    public RoutesRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, YearToSecond value9, Integer[] value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoutesRecord
     */
    public RoutesRecord() {
        super(Routes.ROUTES);
    }

    /**
     * Create a detached, initialised RoutesRecord
     */
    public RoutesRecord(String flightNo, String departureAirport, String departureAirportName, String departureCity, String arrivalAirport, String arrivalAirportName, String arrivalCity, String aircraftCode, YearToSecond duration, Integer[] daysOfWeek) {
        super(Routes.ROUTES);

        setFlightNo(flightNo);
        setDepartureAirport(departureAirport);
        setDepartureAirportName(departureAirportName);
        setDepartureCity(departureCity);
        setArrivalAirport(arrivalAirport);
        setArrivalAirportName(arrivalAirportName);
        setArrivalCity(arrivalCity);
        setAircraftCode(aircraftCode);
        setDuration(duration);
        setDaysOfWeek(daysOfWeek);
    }
}

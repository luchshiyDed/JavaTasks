/*
 * This file is generated by jOOQ.
 */
package D6.Entities.tables.records;


import D6.Entities.tables.TicketFlights;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Flight segment
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketFlightsRecord extends UpdatableRecordImpl<TicketFlightsRecord> implements Record4<String, Integer, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookings.ticket_flights.ticket_no</code>. Ticket number
     */
    public void setTicketNo(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookings.ticket_flights.ticket_no</code>. Ticket number
     */
    public String getTicketNo() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bookings.ticket_flights.flight_id</code>. Flight ID
     */
    public void setFlightId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookings.ticket_flights.flight_id</code>. Flight ID
     */
    public Integer getFlightId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bookings.ticket_flights.fare_conditions</code>. Travel
     * class
     */
    public void setFareConditions(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookings.ticket_flights.fare_conditions</code>. Travel
     * class
     */
    public String getFareConditions() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bookings.ticket_flights.amount</code>. Travel cost
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>bookings.ticket_flights.amount</code>. Travel cost
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, String, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, String, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TicketFlights.TICKET_FLIGHTS.TICKET_NO;
    }

    @Override
    public Field<Integer> field2() {
        return TicketFlights.TICKET_FLIGHTS.FLIGHT_ID;
    }

    @Override
    public Field<String> field3() {
        return TicketFlights.TICKET_FLIGHTS.FARE_CONDITIONS;
    }

    @Override
    public Field<BigDecimal> field4() {
        return TicketFlights.TICKET_FLIGHTS.AMOUNT;
    }

    @Override
    public String component1() {
        return getTicketNo();
    }

    @Override
    public Integer component2() {
        return getFlightId();
    }

    @Override
    public String component3() {
        return getFareConditions();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public String value1() {
        return getTicketNo();
    }

    @Override
    public Integer value2() {
        return getFlightId();
    }

    @Override
    public String value3() {
        return getFareConditions();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public TicketFlightsRecord value1(String value) {
        setTicketNo(value);
        return this;
    }

    @Override
    public TicketFlightsRecord value2(Integer value) {
        setFlightId(value);
        return this;
    }

    @Override
    public TicketFlightsRecord value3(String value) {
        setFareConditions(value);
        return this;
    }

    @Override
    public TicketFlightsRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TicketFlightsRecord values(String value1, Integer value2, String value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketFlightsRecord
     */
    public TicketFlightsRecord() {
        super(TicketFlights.TICKET_FLIGHTS);
    }

    /**
     * Create a detached, initialised TicketFlightsRecord
     */
    public TicketFlightsRecord(String ticketNo, Integer flightId, String fareConditions, BigDecimal amount) {
        super(TicketFlights.TICKET_FLIGHTS);

        setTicketNo(ticketNo);
        setFlightId(flightId);
        setFareConditions(fareConditions);
        setAmount(amount);
    }
}

/*
 * This file is generated by jOOQ.
 */
package D6.Entities.tables.records;


import D6.Entities.tables.Airports;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * Airports
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AirportsRecord extends TableRecordImpl<AirportsRecord> implements Record5<String, String, String, Object, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookings.airports.airport_code</code>. Airport code
     */
    public void setAirportCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookings.airports.airport_code</code>. Airport code
     */
    public String getAirportCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bookings.airports.airport_name</code>. Airport name
     */
    public void setAirportName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookings.airports.airport_name</code>. Airport name
     */
    public String getAirportName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bookings.airports.city</code>. City
     */
    public void setCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookings.airports.city</code>. City
     */
    public String getCity() {
        return (String) get(2);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setCoordinates(Object value) {
        set(3, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getCoordinates() {
        return get(3);
    }

    /**
     * Setter for <code>bookings.airports.timezone</code>. Airport time zone
     */
    public void setTimezone(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bookings.airports.timezone</code>. Airport time zone
     */
    public String getTimezone() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Object, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, Object, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Airports.AIRPORTS.AIRPORT_CODE;
    }

    @Override
    public Field<String> field2() {
        return Airports.AIRPORTS.AIRPORT_NAME;
    }

    @Override
    public Field<String> field3() {
        return Airports.AIRPORTS.CITY;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field4() {
        return Airports.AIRPORTS.COORDINATES;
    }

    @Override
    public Field<String> field5() {
        return Airports.AIRPORTS.TIMEZONE;
    }

    @Override
    public String component1() {
        return getAirportCode();
    }

    @Override
    public String component2() {
        return getAirportName();
    }

    @Override
    public String component3() {
        return getCity();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object component4() {
        return getCoordinates();
    }

    @Override
    public String component5() {
        return getTimezone();
    }

    @Override
    public String value1() {
        return getAirportCode();
    }

    @Override
    public String value2() {
        return getAirportName();
    }

    @Override
    public String value3() {
        return getCity();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public Object value4() {
        return getCoordinates();
    }

    @Override
    public String value5() {
        return getTimezone();
    }

    @Override
    public AirportsRecord value1(String value) {
        setAirportCode(value);
        return this;
    }

    @Override
    public AirportsRecord value2(String value) {
        setAirportName(value);
        return this;
    }

    @Override
    public AirportsRecord value3(String value) {
        setCity(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    @Override
    public AirportsRecord value4(Object value) {
        setCoordinates(value);
        return this;
    }

    @Override
    public AirportsRecord value5(String value) {
        setTimezone(value);
        return this;
    }

    @Override
    public AirportsRecord values(String value1, String value2, String value3, Object value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AirportsRecord
     */
    public AirportsRecord() {
        super(Airports.AIRPORTS);
    }

    /**
     * Create a detached, initialised AirportsRecord
     */
    public AirportsRecord(String airportCode, String airportName, String city, Object coordinates, String timezone) {
        super(Airports.AIRPORTS);

        setAirportCode(airportCode);
        setAirportName(airportName);
        setCity(city);
        setCoordinates(coordinates);
        setTimezone(timezone);
    }
}

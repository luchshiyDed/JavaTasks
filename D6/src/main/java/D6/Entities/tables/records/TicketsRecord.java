/*
 * This file is generated by jOOQ.
 */
package D6.Entities.tables.records;


import D6.Entities.tables.Tickets;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Tickets
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketsRecord extends UpdatableRecordImpl<TicketsRecord> implements Record5<String, String, String, String, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookings.tickets.ticket_no</code>. Ticket number
     */
    public void setTicketNo(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookings.tickets.ticket_no</code>. Ticket number
     */
    public String getTicketNo() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bookings.tickets.book_ref</code>. Booking number
     */
    public void setBookRef(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookings.tickets.book_ref</code>. Booking number
     */
    public String getBookRef() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bookings.tickets.passenger_id</code>. Passenger ID
     */
    public void setPassengerId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookings.tickets.passenger_id</code>. Passenger ID
     */
    public String getPassengerId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bookings.tickets.passenger_name</code>. Passenger name
     */
    public void setPassengerName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bookings.tickets.passenger_name</code>. Passenger name
     */
    public String getPassengerName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bookings.tickets.contact_data</code>. Passenger contact
     * information
     */
    public void setContactData(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>bookings.tickets.contact_data</code>. Passenger contact
     * information
     */
    public JSONB getContactData() {
        return (JSONB) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, JSONB> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, JSONB> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Tickets.TICKETS.TICKET_NO;
    }

    @Override
    public Field<String> field2() {
        return Tickets.TICKETS.BOOK_REF;
    }

    @Override
    public Field<String> field3() {
        return Tickets.TICKETS.PASSENGER_ID;
    }

    @Override
    public Field<String> field4() {
        return Tickets.TICKETS.PASSENGER_NAME;
    }

    @Override
    public Field<JSONB> field5() {
        return Tickets.TICKETS.CONTACT_DATA;
    }

    @Override
    public String component1() {
        return getTicketNo();
    }

    @Override
    public String component2() {
        return getBookRef();
    }

    @Override
    public String component3() {
        return getPassengerId();
    }

    @Override
    public String component4() {
        return getPassengerName();
    }

    @Override
    public JSONB component5() {
        return getContactData();
    }

    @Override
    public String value1() {
        return getTicketNo();
    }

    @Override
    public String value2() {
        return getBookRef();
    }

    @Override
    public String value3() {
        return getPassengerId();
    }

    @Override
    public String value4() {
        return getPassengerName();
    }

    @Override
    public JSONB value5() {
        return getContactData();
    }

    @Override
    public TicketsRecord value1(String value) {
        setTicketNo(value);
        return this;
    }

    @Override
    public TicketsRecord value2(String value) {
        setBookRef(value);
        return this;
    }

    @Override
    public TicketsRecord value3(String value) {
        setPassengerId(value);
        return this;
    }

    @Override
    public TicketsRecord value4(String value) {
        setPassengerName(value);
        return this;
    }

    @Override
    public TicketsRecord value5(JSONB value) {
        setContactData(value);
        return this;
    }

    @Override
    public TicketsRecord values(String value1, String value2, String value3, String value4, JSONB value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketsRecord
     */
    public TicketsRecord() {
        super(Tickets.TICKETS);
    }

    /**
     * Create a detached, initialised TicketsRecord
     */
    public TicketsRecord(String ticketNo, String bookRef, String passengerId, String passengerName, JSONB contactData) {
        super(Tickets.TICKETS);

        setTicketNo(ticketNo);
        setBookRef(bookRef);
        setPassengerId(passengerId);
        setPassengerName(passengerName);
        setContactData(contactData);
    }
}

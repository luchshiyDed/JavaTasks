/*
 * This file is generated by jOOQ.
 */
package D6.Entities.tables.records;


import D6.Entities.tables.Bookings;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Bookings
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingsRecord extends UpdatableRecordImpl<BookingsRecord> implements Record3<String, OffsetDateTime, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookings.bookings.book_ref</code>. Booking number
     */
    public void setBookRef(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookings.bookings.book_ref</code>. Booking number
     */
    public String getBookRef() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bookings.bookings.book_date</code>. Booking date
     */
    public void setBookDate(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookings.bookings.book_date</code>. Booking date
     */
    public OffsetDateTime getBookDate() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>bookings.bookings.total_amount</code>. Total booking
     * cost
     */
    public void setTotalAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookings.bookings.total_amount</code>. Total booking
     * cost
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, OffsetDateTime, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, OffsetDateTime, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Bookings.BOOKINGS_.BOOK_REF;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return Bookings.BOOKINGS_.BOOK_DATE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Bookings.BOOKINGS_.TOTAL_AMOUNT;
    }

    @Override
    public String component1() {
        return getBookRef();
    }

    @Override
    public OffsetDateTime component2() {
        return getBookDate();
    }

    @Override
    public BigDecimal component3() {
        return getTotalAmount();
    }

    @Override
    public String value1() {
        return getBookRef();
    }

    @Override
    public OffsetDateTime value2() {
        return getBookDate();
    }

    @Override
    public BigDecimal value3() {
        return getTotalAmount();
    }

    @Override
    public BookingsRecord value1(String value) {
        setBookRef(value);
        return this;
    }

    @Override
    public BookingsRecord value2(OffsetDateTime value) {
        setBookDate(value);
        return this;
    }

    @Override
    public BookingsRecord value3(BigDecimal value) {
        setTotalAmount(value);
        return this;
    }

    @Override
    public BookingsRecord values(String value1, OffsetDateTime value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookingsRecord
     */
    public BookingsRecord() {
        super(Bookings.BOOKINGS_);
    }

    /**
     * Create a detached, initialised BookingsRecord
     */
    public BookingsRecord(String bookRef, OffsetDateTime bookDate, BigDecimal totalAmount) {
        super(Bookings.BOOKINGS_);

        setBookRef(bookRef);
        setBookDate(bookDate);
        setTotalAmount(totalAmount);
    }
}

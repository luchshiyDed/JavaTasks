/*
 * This file is generated by jOOQ.
 */
package D6.Entities.tables.records;


import D6.Entities.tables.BoardingPasses;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Boarding passes
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardingPassesRecord extends UpdatableRecordImpl<BoardingPassesRecord> implements Record4<String, Integer, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookings.boarding_passes.ticket_no</code>. Ticket number
     */
    public void setTicketNo(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bookings.boarding_passes.ticket_no</code>. Ticket number
     */
    public String getTicketNo() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bookings.boarding_passes.flight_id</code>. Flight ID
     */
    public void setFlightId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bookings.boarding_passes.flight_id</code>. Flight ID
     */
    public Integer getFlightId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bookings.boarding_passes.boarding_no</code>. Boarding
     * pass number
     */
    public void setBoardingNo(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bookings.boarding_passes.boarding_no</code>. Boarding
     * pass number
     */
    public Integer getBoardingNo() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>bookings.boarding_passes.seat_no</code>. Seat number
     */
    public void setSeatNo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bookings.boarding_passes.seat_no</code>. Seat number
     */
    public String getSeatNo() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Integer, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BoardingPasses.BOARDING_PASSES.TICKET_NO;
    }

    @Override
    public Field<Integer> field2() {
        return BoardingPasses.BOARDING_PASSES.FLIGHT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return BoardingPasses.BOARDING_PASSES.BOARDING_NO;
    }

    @Override
    public Field<String> field4() {
        return BoardingPasses.BOARDING_PASSES.SEAT_NO;
    }

    @Override
    public String component1() {
        return getTicketNo();
    }

    @Override
    public Integer component2() {
        return getFlightId();
    }

    @Override
    public Integer component3() {
        return getBoardingNo();
    }

    @Override
    public String component4() {
        return getSeatNo();
    }

    @Override
    public String value1() {
        return getTicketNo();
    }

    @Override
    public Integer value2() {
        return getFlightId();
    }

    @Override
    public Integer value3() {
        return getBoardingNo();
    }

    @Override
    public String value4() {
        return getSeatNo();
    }

    @Override
    public BoardingPassesRecord value1(String value) {
        setTicketNo(value);
        return this;
    }

    @Override
    public BoardingPassesRecord value2(Integer value) {
        setFlightId(value);
        return this;
    }

    @Override
    public BoardingPassesRecord value3(Integer value) {
        setBoardingNo(value);
        return this;
    }

    @Override
    public BoardingPassesRecord value4(String value) {
        setSeatNo(value);
        return this;
    }

    @Override
    public BoardingPassesRecord values(String value1, Integer value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BoardingPassesRecord
     */
    public BoardingPassesRecord() {
        super(BoardingPasses.BOARDING_PASSES);
    }

    /**
     * Create a detached, initialised BoardingPassesRecord
     */
    public BoardingPassesRecord(String ticketNo, Integer flightId, Integer boardingNo, String seatNo) {
        super(BoardingPasses.BOARDING_PASSES);

        setTicketNo(ticketNo);
        setFlightId(flightId);
        setBoardingNo(boardingNo);
        setSeatNo(seatNo);
    }
}
